
/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for eia components
 */

/** @cond */

#ifndef _eiaextensions_H_
#define _eiaextensions_H_

#include <types.h>

/* **** DO NOT EDIT - this file is generated by ARChitect2 ****
 *
 * Description: Header file declaring the compiler extensions for apex components
 */

#ifndef _apexextensions_H_
#define _apexextensions_H_

// User extension instruction - crc_32
extern long crc_32(long, long);
#pragma intrinsic(crc_32, opcode => 0x07, sub_opcode => 6 )
static UInt32 ALWAYS_INLINE em_crc32(UInt32 a, UInt32 b)
{
    return (UInt32)crc_32((long)a, (long)b); //lint !e713 !e732
}


#define APEX_EXTENSIONINSTRUCTIONS_PRESENT  1
#define APEX_COM_ARC_HARDWARE_FLOATING_POINT_UNIT_FPU_PRESENT   1

// User extension aux register fpu_build
#define AR_FPU_BUILD 0xc8
#pragma Aux_register(0xc8, name=>"fpu_build")

// User extension aux register fpu_ctrl
#define AR_FPU_CTRL 0x300
#pragma Aux_register(0x300, name=>"fpu_ctrl")

// User extension aux register fpu_status
#define AR_FPU_STATUS 0x301
#pragma Aux_register(0x301, name=>"fpu_status")

// User extension instruction fsmul
extern long fsmul(long,long);
#pragma intrinsic(fsmul,opcode=>6,sub_opcode=>0, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsadd
extern long fsadd(long,long);
#pragma intrinsic(fsadd,opcode=>6,sub_opcode=>1, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fssub
extern long fssub(long,long);
#pragma intrinsic(fssub,opcode=>6,sub_opcode=>2, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fcvt32
extern long fcvt32(long,long);
#pragma intrinsic(fcvt32,opcode=>6,sub_opcode=>8, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fsdiv
extern long fsdiv(long,long);
#pragma intrinsic(fsdiv,opcode=>6,sub_opcode=>7, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmp
extern long fscmp(long,long);
#pragma intrinsic(fscmp,opcode=>6,sub_opcode=>3, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmp
extern long fscmp_f(long,long);
#pragma intrinsic(fscmp_f,opcode=>6,sub_opcode=>3, set_flags => 1, flags => "zncv", effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmpf
extern long fscmpf(long,long);
#pragma intrinsic(fscmpf,opcode=>6,sub_opcode=>4, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fscmpf
extern long fscmpf_f(long,long);
#pragma intrinsic(fscmpf_f,opcode=>6,sub_opcode=>4, set_flags => 1, flags => "zncv", effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")

// User extension instruction fssqrt
extern long fssqrt(long);
#pragma intrinsic(fssqrt,opcode=>6,sub_opcode=>0, effects=>"auxreg=0xc8:is_read:is_written; auxreg=0x300:is_read:is_written; auxreg=0x301:is_read:is_written")


#endif
#endif

/** @endcond */
